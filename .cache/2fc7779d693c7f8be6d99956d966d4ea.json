{"id":"TRb0","dependencies":[{"name":"C:\\Users\\zelkw\\OneDrive\\Documents\\13\\node_modules\\d3-format\\package.json","includedInParent":true,"mtime":1553524944899},{"name":"C:\\Users\\zelkw\\OneDrive\\Documents\\13\\package.json","includedInParent":true,"mtime":1553524704110},{"name":"C:\\Users\\zelkw\\OneDrive\\Documents\\13\\.babelrc","includedInParent":true,"mtime":1553524702477}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=function(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf(\"e\"))<0)return null;var n,l=e.slice(0,n);return[l.length>1?l[0]+l.slice(2):l,+e.slice(n+1)]};","map":{"mappings":[{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":14,"column":1},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":14,"column":1},"generated":{"line":1,"column":13}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":14,"column":1},"generated":{"line":1,"column":20}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":14,"column":1},"generated":{"line":1,"column":35}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":14,"column":1},"generated":{"line":1,"column":43}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":14,"column":1},"generated":{"line":1,"column":56}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":14,"column":1},"generated":{"line":1,"column":57}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":14,"column":1},"generated":{"line":1,"column":64}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":4,"column":15},"generated":{"line":1,"column":68}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":4,"column":15},"generated":{"line":1,"column":76}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":4,"column":15},"generated":{"line":1,"column":84}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"x","original":{"line":4,"column":24},"generated":{"line":1,"column":93}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"p","original":{"line":4,"column":27},"generated":{"line":1,"column":95}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":5,"column":6},"generated":{"line":1,"column":98}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"i","original":{"line":5,"column":7},"generated":{"line":1,"column":102}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"x","original":{"line":5,"column":12},"generated":{"line":1,"column":105}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"p","original":{"line":5,"column":16},"generated":{"line":1,"column":107}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"x","original":{"line":5,"column":20},"generated":{"line":1,"column":109}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"toExponential","original":{"line":5,"column":22},"generated":{"line":1,"column":111}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"p","original":{"line":5,"column":36},"generated":{"line":1,"column":125}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":5,"column":40},"generated":{"line":1,"column":127}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"x","original":{"line":5,"column":45},"generated":{"line":1,"column":130}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"toExponential","original":{"line":5,"column":47},"generated":{"line":1,"column":132}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"indexOf","original":{"line":5,"column":64},"generated":{"line":1,"column":149}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":5,"column":72},"generated":{"line":1,"column":157}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":5,"column":80},"generated":{"line":1,"column":163}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":5,"column":83},"generated":{"line":1,"column":165}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":5,"column":90},"generated":{"line":1,"column":172}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"i","original":{"line":6,"column":6},"generated":{"line":1,"column":177}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"i","original":{"line":6,"column":6},"generated":{"line":1,"column":181}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"coefficient","original":{"line":6,"column":9},"generated":{"line":1,"column":183}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"x","original":{"line":6,"column":23},"generated":{"line":1,"column":185}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"slice","original":{"line":6,"column":25},"generated":{"line":1,"column":187}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":6,"column":31},"generated":{"line":1,"column":193}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"i","original":{"line":6,"column":34},"generated":{"line":1,"column":195}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":10,"column":9},"generated":{"line":1,"column":198}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":10,"column":9},"generated":{"line":1,"column":204}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"coefficient","original":{"line":11,"column":4},"generated":{"line":1,"column":205}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"length","original":{"line":11,"column":16},"generated":{"line":1,"column":207}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":11,"column":25},"generated":{"line":1,"column":214}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"coefficient","original":{"line":11,"column":29},"generated":{"line":1,"column":216}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":11,"column":41},"generated":{"line":1,"column":218}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"coefficient","original":{"line":11,"column":46},"generated":{"line":1,"column":221}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"slice","original":{"line":11,"column":58},"generated":{"line":1,"column":223}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":11,"column":64},"generated":{"line":1,"column":229}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"coefficient","original":{"line":11,"column":69},"generated":{"line":1,"column":232}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"x","original":{"line":12,"column":5},"generated":{"line":1,"column":235}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"slice","original":{"line":12,"column":7},"generated":{"line":1,"column":237}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","name":"i","original":{"line":12,"column":13},"generated":{"line":1,"column":243}},{"source":"..\\node_modules\\d3-format\\src\\formatDecimal.js","original":{"line":12,"column":17},"generated":{"line":1,"column":245}}],"sources":{"..\\node_modules\\d3-format\\src\\formatDecimal.js":"// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, Â±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n"},"lineCount":null}},"hash":"c0aefe7c96cd49dc93614e1b6a0f49ff","cacheData":{"env":{}}}